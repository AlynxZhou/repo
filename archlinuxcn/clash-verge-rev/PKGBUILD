# Maintainer: Integral <integral@member.fsf.org>
# Contributor: Pylogmon <pylogmon@outlook.com>

pkgname=clash-verge-rev
_pkgname=${pkgname%-rev}
pkgver=2.2.3
pkgrel=3
pkgdesc="Continuation of Clash Verge | A Clash Meta GUI based on Tauri"
arch=('x86_64' 'i686' 'aarch64' 'armv7h')
url="https://github.com/${pkgname}/${pkgname}"
license=('GPL-3.0-or-later')
depends=('webkit2gtk-4.1' 'gtk3' 'libayatana-appindicator' 'clash-meta')
conflicts=("${_pkgname}")
provides=("${_pkgname}")
makedepends=('pnpm' 'cargo')
source=("${pkgname}-${pkgver}.tar.gz::${url}/archive/refs/tags/v${pkgver}.tar.gz"
	"${_pkgname}-service.tar.gz::https://github.com/${pkgname}/${_pkgname}-service/archive/refs/tags/${CARCH}-unknown-linux-gnu.tar.gz")
sha512sums=('4c7c2b6abbb45b64fd6f020114b46119bee9978582642400587b2b1dbb7345dee6d388258056c65ec5188c5df16f186d2de1a90a2a119440a22ebcfe280814cf'
            '2c29872251b0d86222cd1bba394525660b2f2c06972876a0d1050815d918ab434b4e2490b0730a445706ef8284d669885234fbf46479d09a83f3e452a125aa03')
install="${pkgname}.install"

prepare() {
	cd "${pkgname}-${pkgver}/"
	sed -i '/createUpdaterArtifacts/s/true/false/' src-tauri/tauri.conf.json
	pnpm i
}

build() {
	cd "${_pkgname}-service-${CARCH}-unknown-linux-gnu/"
	export CFLAGS+=" -ffat-lto-objects"
	_prepare_service
	_build_service
	_check_service
	_package_service

	cd "../${pkgname}-${pkgver}/"
	install -d ./src-tauri/sidecar/

	# Use empty files as placeholders
	touch ./src-tauri/sidecar/verge-mihomo{,-alpha}-${CARCH}-unknown-linux-gnu

	install -vDm644 ./src/locales/* -t ./src-tauri/resources/locales/
	pnpm build -b deb
}

package() {
	cp -a ${pkgname}-${pkgver}/src-tauri/target/release/bundle/deb/Clash\ Verge_${pkgver}_*/data/* "${pkgdir}"
	ln -sf /usr/bin/clash-meta "${pkgdir}/usr/bin/verge-mihomo"
	ln -sf /usr/bin/clash-meta "${pkgdir}/usr/bin/verge-mihomo-alpha"
}

_prepare_service() {
	echo "==> Starting ${FUNCNAME[0]}()..."
	cargo fetch --locked --target "$(rustc -vV | sed -n 's/host: //p')"
}

_build_service() {
	echo "==> Starting ${FUNCNAME[0]}()..."
	cargo build --frozen --release --all-features
}

_check_service() {
	echo "==> Starting ${FUNCNAME[0]}()..."
	cargo test --frozen --all-features
}

_package_service() {
	echo "==> Starting ${FUNCNAME[0]}()..."

	for bin in {${_pkgname},{,un}install}-service; do
		install -vDm755 "./target/release/${bin}" "../${pkgname}-${pkgver}/src-tauri/resources/${bin}-${CARCH}-unknown-linux-gnu"
	done
}
